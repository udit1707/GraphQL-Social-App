{"ast":null,"code":"import _toConsumableArray from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/udit/Desktop/Graphql Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/udit/Desktop/Graphql Frontend/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from 'react';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      var graphqlQuery = {\n        query: \"{\\n        posts(page :\".concat(page, \"){\\n            posts{\\n            _id\\n            title\\n            content\\n            creator{\\n              name\\n            }\\n            createdAt\\n          }\\n            totalPosts\\n        }\\n      }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(graphqlQuery)\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors) {\n          throw new Error('Fetching Posts Failed!');\n        }\n\n        _this.setState({\n          posts: resData.data.posts.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('http://localhost:8080/auth/status', {\n        method: 'PATCH',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status: _this.state.status\n        })\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      });\n\n      var formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      formData.append('image', postData.image);\n      var graphqlQuery = {\n        query: \"\\n        mutation {\\n          createPost(postInput: {title: \\\"\".concat(postData.title, \"\\\", content: \\\"\").concat(postData.content, \"\\\", imageUrl: \\\"some url\\\"}) {\\n            _id\\n            title\\n            content\\n            imageUrl\\n            creator {\\n              name\\n            }\\n            createdAt\\n          }\\n        }\\n      \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(graphqlQuery),\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token,\n          'Content-Type': 'application/json'\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (resData) {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\"Validation failed. Make sure the email address isn't used yet!\");\n        }\n\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n\n        console.log(resData);\n        var post = {\n          _id: resData.data.createPost._id,\n          title: resData.data.createPost.title,\n          content: resData.data.createPost.content,\n          creator: resData.data.createPost.creator,\n          createdAt: resData.data.createPost.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch('http://localhost:8080/feed/post/' + postId, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.loadPosts(); // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8080/auth/status', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/home/udit/Desktop/Graphql Frontend/src/pages/Feed/Feed.js"],"names":["React","Component","Fragment","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","setState","page","graphqlQuery","query","fetch","method","headers","Authorization","props","token","body","JSON","stringify","then","res","json","resData","errors","Error","data","map","post","imagePath","imageUrl","catch","catchError","statusUpdateHandler","event","preventDefault","console","log","newPostHandler","startEditPostHandler","postId","prevState","loadedPost","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","title","content","image","createPost","creator","createdAt","updatedPosts","postIndex","findIndex","pop","unshift","err","error","statusInputChangeHandler","input","value","deletePostHandler","errorHandler","textAlign","marginTop","length","bind","Math","ceil","name","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:8080/auth/status', {\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page }); \n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQuery={\n      query:`{\n        posts(page :${page}){\n            posts{\n            _id\n            title\n            content\n            creator{\n              name\n            }\n            createdAt\n          }\n            totalPosts\n        }\n      }\n      `     \n    }\n    fetch('http://localhost:8080/graphql', {\n      method:'POST',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type':'application/json'\n      },\n      body:JSON.stringify(graphqlQuery)\n    })\n      .then(res => {\n       \n        return res.json();\n      })\n      .then(resData => {\n        if(resData.errors){\n          throw new Error('Fetching Posts Failed!'); \n        }\n        this.setState({\n          posts: resData.data.posts.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl\n            };\n          }),\n          totalPosts: resData.data.posts.totalPosts,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('http://localhost:8080/auth/status', {\n      method: 'PATCH',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: this.state.status\n      })\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('image', postData.image);\n\n    let graphqlQuery = {\n      query: `\n        mutation {\n          createPost(postInput: {title: \"${postData.title}\", content: \"${\n        postData.content\n      }\", imageUrl: \"some url\"}) {\n            _id\n            title\n            content\n            imageUrl\n            creator {\n              name\n            }\n            createdAt\n          }\n        }\n      `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(graphqlQuery),\n      headers: {\n        Authorization: 'Bearer ' + this.props.token,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.errors && resData.errors[0].status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        if (resData.errors) {\n          throw new Error('User login failed!');\n        }\n        console.log(resData);\n        const post = {\n          _id: resData.data.createPost._id,\n          title: resData.data.createPost.title,\n          content: resData.data.createPost.content,\n          creator: resData.data.createPost.creator,\n          createdAt: resData.data.createPost.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts=[...prevState.posts];\n          if(prevState.editPost)\n          {\n            const postIndex=prevState.posts.findIndex(\n              p=>p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex]=post;\n          }\n          else{\n            updatedPosts.pop();\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts:updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('http://localhost:8080/feed/post/' + postId, {\n      method: 'DELETE',\n      headers: {\n        Authorization: 'Bearer ' + this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.loadPosts();\n        // this.setState(prevState => {\n        //   const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}