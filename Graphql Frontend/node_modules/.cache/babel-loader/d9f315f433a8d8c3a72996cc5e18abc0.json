{"ast":null,"code":"import _objectSpread from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/udit/Desktop/00-frontend-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/udit/Desktop/00-frontend-starting-setup/src/pages/Feed/Feed.js\";\nimport React, { Component, Fragment } from 'react';\nimport openSocket from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\nimport post from '../../components/Feed/Post/Post';\n\nvar Feed = /*#__PURE__*/function (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isEditing: false,\n      posts: [],\n      totalPosts: 0,\n      editPost: null,\n      status: '',\n      postPage: 1,\n      postsLoading: true,\n      editLoading: false\n    };\n\n    _this.addPost = function (post) {\n      _this.setState(function (prevState) {\n        var updatedPosts = _toConsumableArray(prevState.posts);\n\n        if (prevState.postPage === 1) {\n          updatedPosts.pop();\n          updatedPosts.unshift(post);\n        }\n\n        return {\n          posts: updatedPosts,\n          totalPosts: prevState.totalPosts + 1\n        };\n      });\n    };\n\n    _this.updatedPost = function (post) {\n      _this.setState(function (prevState) {\n        var updatedPosts = _toConsumableArray(prevState.posts);\n\n        var updatedPostIndex = updatedPosts.findIndex(function (p) {\n          return p._id === post._id;\n        });\n\n        if (updatedPostIndex > -1) {\n          updatedPosts[updatedPostIndex] = post;\n        }\n\n        return {\n          posts: updatedPosts\n        };\n      });\n    };\n\n    _this.loadPosts = function (direction) {\n      if (direction) {\n        _this.setState({\n          postsLoading: true,\n          posts: []\n        });\n      }\n\n      var page = _this.state.postPage;\n\n      if (direction === 'next') {\n        page++;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      if (direction === 'previous') {\n        page--;\n\n        _this.setState({\n          postPage: page\n        });\n      }\n\n      fetch('http://localhost:8080/feed/posts?page=' + page, {\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this.setState({\n          posts: resData.posts.map(function (post) {\n            return _objectSpread({}, post, {\n              imagePath: post.imageUrl\n            });\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      }).catch(_this.catchError);\n    };\n\n    _this.statusUpdateHandler = function (event) {\n      event.preventDefault();\n      fetch('http://localhost:8080/feed/status', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + _this.props.token\n        },\n        body: JSON.stringify({\n          status: _this.state.status\n        })\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n      }).catch(_this.catchError);\n    };\n\n    _this.newPostHandler = function () {\n      _this.setState({\n        isEditing: true\n      });\n    };\n\n    _this.startEditPostHandler = function (postId) {\n      _this.setState(function (prevState) {\n        var loadedPost = _objectSpread({}, prevState.posts.find(function (p) {\n          return p._id === postId;\n        }));\n\n        return {\n          isEditing: true,\n          editPost: loadedPost\n        };\n      });\n    };\n\n    _this.cancelEditHandler = function () {\n      _this.setState({\n        isEditing: false,\n        editPost: null\n      });\n    };\n\n    _this.finishEditHandler = function (postData) {\n      _this.setState({\n        editLoading: true\n      }); // Set up data (with image!)\n\n\n      var formData = new FormData();\n      formData.append('title', postData.title);\n      formData.append('content', postData.content);\n      formData.append('image', postData.image);\n      var url = 'http://localhost:8080/feed/post';\n      var method = 'POST';\n\n      if (_this.state.editPost) {\n        url = 'http://localhost:8080/feed/post/' + _this.state.editPost._id;\n        method = 'PUT';\n      }\n\n      fetch(url, {\n        method: method,\n        // headers:{\n        //   'Content-Type':'application/json'\n        // },\n        body: formData,\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        } // JSON.stringify({\n        //   title:postData.title,\n        //   content:postData.content\n        // })\n\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n        var post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n\n        _this.setState(function (prevState) {\n          var updatedPosts = _toConsumableArray(prevState.posts);\n\n          if (prevState.editPost) {\n            var postIndex = prevState.posts.findIndex(function (p) {\n              return p._id === prevState.editPost._id;\n            });\n            updatedPosts[postIndex] = post;\n          }\n\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n    };\n\n    _this.statusInputChangeHandler = function (input, value) {\n      _this.setState({\n        status: value\n      });\n    };\n\n    _this.deletePostHandler = function (postId) {\n      _this.setState({\n        postsLoading: true\n      });\n\n      fetch('http://localhost:8080/feed/post/' + postId, {\n        method: 'DELETE',\n        headers: {\n          Authorization: 'Bearer ' + _this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        console.log(resData);\n\n        _this.setState(function (prevState) {\n          var updatedPosts = prevState.posts.filter(function (p) {\n            return p._id !== postId;\n          });\n          return {\n            posts: updatedPosts,\n            postsLoading: false\n          };\n        });\n      }).catch(function (err) {\n        console.log(err);\n\n        _this.setState({\n          postsLoading: false\n        });\n      });\n    };\n\n    _this.errorHandler = function () {\n      _this.setState({\n        error: null\n      });\n    };\n\n    _this.catchError = function (error) {\n      _this.setState({\n        error: error\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8080/auth/status', {\n        headers: {\n          Authorization: 'Bearer ' + this.props.token\n        }\n      }).then(function (res) {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n\n        return res.json();\n      }).then(function (resData) {\n        _this2.setState({\n          status: resData.status\n        });\n      }).catch(this.catchError);\n      this.loadPosts();\n      var socket = openSocket('http://localhost:8080');\n      socket.on('posts', function (data) {\n        if (data.action === 'create') {\n          _this2.addPost(data.post);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ErrorHandler, {\n        error: this.state.error,\n        onHandle: this.errorHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(FeedEdit, {\n        editing: this.state.isEditing,\n        selectedPost: this.state.editPost,\n        loading: this.state.editLoading,\n        onCancelEdit: this.cancelEditHandler,\n        onFinishEdit: this.finishEditHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.statusUpdateHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        type: \"text\",\n        placeholder: \"Your status\",\n        control: \"input\",\n        onChange: this.statusInputChangeHandler,\n        value: this.state.status,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        mode: \"flat\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }\n      }, \"Update\"))), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed__control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        mode: \"raised\",\n        design: \"accent\",\n        onClick: this.newPostHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }\n      }, \"New Post\")), /*#__PURE__*/React.createElement(\"section\", {\n        className: \"feed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, this.state.postsLoading && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '2rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Loader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      })), this.state.posts.length <= 0 && !this.state.postsLoading ? /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }\n      }, \"No posts found.\") : null, !this.state.postsLoading && /*#__PURE__*/React.createElement(Paginator, {\n        onPrevious: this.loadPosts.bind(this, 'previous'),\n        onNext: this.loadPosts.bind(this, 'next'),\n        lastPage: Math.ceil(this.state.totalPosts / 2),\n        currentPage: this.state.postPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }\n      }, this.state.posts.map(function (post) {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post._id,\n          id: post._id,\n          author: post.creator.name,\n          date: new Date(post.createdAt).toLocaleDateString('en-US'),\n          title: post.title,\n          image: post.imageUrl,\n          content: post.content,\n          onStartEdit: _this3.startEditPostHandler.bind(_this3, post._id),\n          onDelete: _this3.deletePostHandler.bind(_this3, post._id),\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }\n        });\n      }))));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/home/udit/Desktop/00-frontend-starting-setup/src/pages/Feed/Feed.js"],"names":["React","Component","Fragment","openSocket","Post","Button","FeedEdit","Input","Paginator","Loader","ErrorHandler","post","Feed","state","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","addPost","setState","prevState","updatedPosts","pop","unshift","updatedPost","updatedPostIndex","findIndex","p","_id","loadPosts","direction","page","fetch","headers","Authorization","props","token","then","res","Error","json","resData","map","imagePath","imageUrl","totalItems","catch","catchError","statusUpdateHandler","event","preventDefault","method","body","JSON","stringify","console","log","newPostHandler","startEditPostHandler","postId","loadedPost","find","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","title","content","image","url","creator","createdAt","postIndex","err","error","statusInputChangeHandler","input","value","deletePostHandler","filter","errorHandler","socket","on","data","action","textAlign","marginTop","length","bind","Math","ceil","name","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport openSocket from 'socket.io-client';\nimport Post from '../../components/Feed/Post/Post';\nimport Button from '../../components/Button/Button';\nimport FeedEdit from '../../components/Feed/FeedEdit/FeedEdit';\nimport Input from '../../components/Form/Input/Input';\nimport Paginator from '../../components/Paginator/Paginator';\nimport Loader from '../../components/Loader/Loader';\nimport ErrorHandler from '../../components/ErrorHandler/ErrorHandler';\nimport './Feed.css';\nimport post from '../../components/Feed/Post/Post';\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: '',\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:8080/auth/status',{\n      headers: {\n        Authorization:'Bearer '+this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch user status.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({ status: resData.status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n    const socket=openSocket('http://localhost:8080');\n    socket.on('posts',data=>{\n\n      if(data.action==='create'){\n        this.addPost(data.post);\n      }\n    });\n  }\n\n  addPost=post=>{\n      this.setState(prevState=>{\n        const updatedPosts=[...prevState.posts];\n        if(prevState.postPage===1){\n          updatedPosts.pop();\n          updatedPosts.unshift(post);\n        }\n        return {\n          posts:updatedPosts,\n          totalPosts:prevState.totalPosts+1\n        };\n      });\n  };\n  updatedPost=post=>{\n    this.setState(prevState=>{\n      const updatedPosts=[...prevState.posts];\n      const updatedPostIndex=updatedPosts.findIndex(p=>p._id===post._id);\n      if(updatedPostIndex>-1)\n      {updatedPosts[updatedPostIndex] =post;}\n      return {\n        posts:updatedPosts\n      };\n    });\n  };\n\n\n\n  loadPosts = direction => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === 'next') {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === 'previous') {\n      page--;\n      this.setState({ postPage: page });\n    }\n    fetch('http://localhost:8080/feed/posts?page='+page,{\n      headers: {\n        Authorization:'Bearer '+this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200) {\n          throw new Error('Failed to fetch posts.');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState({\n          posts: resData.posts.map(post => {\n            return {\n              ...post,\n              imagePath: post.imageUrl\n            };\n          }),\n          totalPosts: resData.totalItems,\n          postsLoading: false\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = event => {\n    event.preventDefault();\n    fetch('http://localhost:8080/feed/status',{\n      method:'PUT',\n      headers: {\n        'Content-Type':'application/json',\n        Authorization:'Bearer '+this.props.token\n\n      },\n      body:JSON.stringify({status:this.state.status})\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Can't update status!\");\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = postId => {\n    this.setState(prevState => {\n      const loadedPost = { ...prevState.posts.find(p => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = postData => {\n    this.setState({\n      editLoading: true\n    });\n    // Set up data (with image!)\n    const formData = new FormData();\n    formData.append('title', postData.title);\n    formData.append('content', postData.content);\n    formData.append('image', postData.image);\n    let url = 'http://localhost:8080/feed/post';\n    let method = 'POST';\n    if (this.state.editPost) {\n      url = 'http://localhost:8080/feed/post/' + this.state.editPost._id;\n      method = 'PUT';\n    }\n\n    fetch(url, {\n      method: method,\n      // headers:{\n      //   'Content-Type':'application/json'\n      // },\n      body: formData,\n      headers: {\n        Authorization:'Bearer '+this.props.token\n      }\n      // JSON.stringify({\n      //   title:postData.title,\n      //   content:postData.content\n      // })\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Creating or editing a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        const post = {\n          _id: resData.post._id,\n          title: resData.post.title,\n          content: resData.post.content,\n          creator: resData.post.creator,\n          createdAt: resData.post.createdAt\n        };\n        this.setState(prevState => {\n          let updatedPosts = [...prevState.posts];\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              p => p._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } \n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false\n          };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = postId => {\n    this.setState({ postsLoading: true });\n    fetch('http://localhost:8080/feed/post/'+postId,{\n      method:'DELETE',\n      headers: {\n        Authorization:'Bearer '+this.props.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Deleting a post failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n        this.setState(prevState => {\n          const updatedPosts = prevState.posts.filter(p => p._id !== postId);\n          return { posts: updatedPosts, postsLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = error => {\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: 'center', marginTop: '2rem' }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: 'center' }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, 'previous')}\n              onNext={this.loadPosts.bind(this, 'next')}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map(post => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString('en-US')}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}